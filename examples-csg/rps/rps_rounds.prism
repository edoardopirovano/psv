// rock-paper-scissors CSG
// gxn/ghrs/dxp 31/03/18

csg
//label "adv" = true; // uncomment for strategy synthesis

player p1 [r1], [p1], [s1], [t1] endplayer
player p2 [r2], [p2], [s2], [t2] endplayer
player rounds [rounds] endplayer

const nrounds; // number of rounds

module rounds

	r : [0..nrounds];
	
	[rounds] m1>0 & r<nrounds -> (r'=r+1);
	[rounds] m1>0 & r=nrounds -> true;

endmodule

// first player
module m1

	m1 : [0..3];

	[r1] m1=0 & r<nrounds -> (m1'=1); // rock 
	[p1] m1=0 & r<nrounds -> (m1'=2); // paper	
	[s1] m1=0 & r<nrounds -> (m1'=3); // scissors
	[t1] m1>0 & r<nrounds -> (m1'=0); // restart
	
endmodule

// second player constructed through renaming
module m2 = m1[m1=m2,r1=r2,p1=p2,s1=s2,t1=t2] endmodule

// atomic propositions
label "win1" = (m1=1 & m2=3) | (m1=2 & m2=1) | (m1=3 & m2=2); // player 1 wins a round
label "win2" = (m2=1 & m1=3) | (m2=2 & m1=1) | (m2=3 & m1=2); // player 2 wins a round
label "draw" = (m2=1 & m1=1) | (m2=2 & m1=2) | (m2=3 & m1=3); // draw

// payoff for player 1
rewards "payoff"
	[t1] (m1=1 & m2=3) | (m1=2 & m2=1) | (m1=3 & m2=2) : 1;	// player 1 wins
	[t1] (m1=1 & m2=2) | (m1=2 & m2=3) | (m1=3 & m2=1) : -1; // player 2 wins
endrewards