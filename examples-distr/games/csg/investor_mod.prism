// EXAMPLE: INVESTING IN THE FUTURES MARKET
// (McIver and Morgan 03)

csg

player investor [noinvest], [invest], [cashin] endplayer
player market1 [step] endplayer
player market2 [nobar], [bar] endplayer
player market3 [shares] endplayer

const int nrounds; 	

// module use to decide who can move
module month
	m : [0..3];
	r : [0..nrounds];
	[step] m=0 -> (m'=1); // start of month: invest and bar decision
	[step] m=1 -> (m'=2); // shares change value
	[step] m=2 & r<nrounds -> (m'=0) & (r'=r+1); // cash in shares if possible
endmodule

// investor 1
module investor1
	i : [0..2]; // i=0 no reservation, i=1 made reservation, i=2 cashed in (done)
	[noinvest] m=0 & (i=0 | (i=1 & b=1)) -> (i'=0); // do nothing
	[invest] m=0 & (i=0 | (i=1 & b=1)) -> (i'=1); // make reservation
	[cashin] m=2 & i=1 & b=0 -> (i'=2); // cash in shares (not barred)
endmodule

// bar the investors
module bar
	b : [0..1] init 1; // initially cannot bar
    	// b=0 - not barred and b=1 - barred
	[nobar] m=0 -> (b'=0); // do not bar this month
	[bar] m=0 & b=0 -> (b'=1); // bar 1 this month (cannot have barred previous month) 
endmodule

// value of the shares
module value
	v : [0..10] init 5;
	[shares] m=1 -> p/10 : (v'=min(v+1,c)) + (1-p/10) : (v'=min(max(v-1,0),c));
endmodule

// probability of shares going up/down
module probability
	p : [0..10] init 5; // probabilitity is p/10 and initially the probability is 1/2
	[shares] m=1 & v<5 -> 2/3 : (p'=min(p+1,10)) + 1/3 : (p'=max(p-1,0));
	[shares] m=1 & v=5 -> 1/2 : (p'=min(p+1,10)) + 1/2 : (p'=max(p-1,0));
	[shares] m=1 & v>5 -> 1/3 : (p'=min(p+1,10)) + 2/3 : (p'=max(p-1,0));
endmodule

// cap on the value of the shares
module cap
	c : [0..10] init 10; // cap on the shares
	[shares] m=1 -> 1/2 : (c'=max(c-1,0)) + 1/2 : (c'=c); // probability 1/2 the cap decreases
endmodule

// get reward when investor cashes in
// add market rewards which are to minimise the investors (either negative or 10-v would work)
rewards "profit_lc"
	[cashin] m=2 & i=1 & b=0 : v * (1 + r/nrounds); // cash in
endrewards 

rewards "profit_ec"
	[cashin] m=2 & i=1 & b=0 : v * (1 + nrounds/(r+1)); // cash in
endrewards

rewards "profit_mc"
	// Use state rewards:
	//i=1 & b=0 & m=0 : v;
	// Could also use transition rewards
	//[cashin] m=2 & i=1 & b=0 : v * (1 + r/nrounds) * (1 + mod(r,4)/3);
	[cashin] m=2 & i=1 & b=0 : v * (1 + nrounds/(3*(r+1))) * (1 + mod(r,4)/3);
	//[cashin] m=2 & i=1 & b=0 : v * (1 + mod(r,4)/3);
endrewards
