asynchronous = {goSearch, goHome, find, move, collect, failDeposit}
agentEnvironment = {deposit}
globalSynchronous = {}

agent module Agt1

    // 0: Resting
    // 1: Searching
    // 2: Reaching
    // 3: Homing
    // 4: Homing (dropped)
    state : [0..4] init 0;
    timeSearching : [0..2] init 0;
    distance : [0..2] init 0;
    fromHome : [0..2] init 0;

    [goSearch] state=0 -> 0.5:(state'=0) + 0.5:(state'=1);
    [find] state=1 & timeSearching<2 -> 0.7:(timeSearching'=timeSearching+1)
        + 0.15:(state'=2) & (distance'=1) & (timeSearching'=0)
        + 0.15:(state'=2) & (distance'=2) & (timeSearching'=0);
    [goHome] state=1 & timeSearching=2 -> 1.0:(state'=0) & (timeSearching'=0);
    [move] state=2 & distance>0 -> 1.0:(distance'=distance-1) & (fromHome'=fromHome+1);
    [collect] state=2 & distance=0 -> 1.0:(state'=3);
    [move] (state=3 | state=4) & fromHome>0 -> 1.0:(fromHome'=fromHome-1);
    [deposit] state=3 & fromHome=0 -> 1.0:(state'=0);
    [failDeposit] state=4 & fromHome=0 -> 1.0:(state'=0);

endmodule

agent module Agt2

    // 0: Resting
    // 1: Searching
    // 2: Reaching
    // 3: Homing
    // 4: Homing (dropped)
    state : [0..4] init 0;
    timeSearching : [0..2] init 0;
    distance : [0..2] init 0;
    fromHome : [0..2] init 0;

    [goSearch] state=0 -> 0.5:(state'=0) + 0.5:(state'=1);
    [find] state=1 & timeSearching<2 -> 0.9:(timeSearching'=timeSearching+1)
        + 0.05:(state'=2) & (distance'=1) & (timeSearching'=0)
        + 0.05:(state'=2) & (distance'=2) & (timeSearching'=0);
    [goHome] state=1 & timeSearching=2 -> 1.0:(state'=0) & (timeSearching'=0);
    [move] state=2 & distance>0 -> 1.0:(distance'=distance-1) & (fromHome'=fromHome+1);
    [collect] state=2 & distance=0 -> 1.0:(state'=3);
    [move] (state=3 | state=4) & fromHome>0 -> 1.0:(fromHome'=fromHome-1);
    [deposit] state=3 & fromHome=0 -> 1.0:(state'=0);
    [failDeposit] state=4 & fromHome=0 -> 1.0:(state'=0);

endmodule

environment module Env
    foodDeposited : [0..2] init 0;

    [deposit] foodDeposited<2 -> 1.0:(foodDeposited'=foodDeposited+1);
endmodule

label "deposited2" = foodDeposited_E>1;