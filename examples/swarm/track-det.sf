asynchronous = {a}
agentEnvironment = {halt}
globalSynchronous = {signal, moveMinus, moveEq, movePlus}

agent module WithSensor
    locationA : [1..7] init 1;
    sensed : [1..7] init 1;
    stoppedA : bool init false;

	[movePlus] (sensed<5) -> 1.0:(locationA'=locationA+1) & (sensed'=locationA+2);
	[moveEq] (sensed<5) -> 1.0:(locationA'=locationA+1) & (sensed'=locationA+1);
	[moveMinus] (sensed<5) -> 1.0:(locationA'=locationA+1) & (sensed'=locationA);

	[halt] (sensed>=5 & !stoppedA) -> 1.0:(stoppedA'=true);
	[signal] (stoppedA) -> 1.0:(stoppedA'=true);
endmodule

agent module WithoutSensor
    locationB : [1..7] init 1;
    stoppedB : bool init false;

	[movePlus] (!stoppedB) -> 1.0:(locationB'=locationB+1);
	[moveEq] (!stoppedB) -> 1.0:(locationB'=locationB+1);
	[moveMinus] (!stoppedB) -> 1.0:(locationB'=locationB+1);

	[signal] (true) -> 1.0:(stoppedB'=true);
endmodule

environment module Env
    locationE : [1..7] init 1;
    halted : bool init false;

	[movePlus] (!halted) -> 1.0:(locationE'=locationE+1);
	[moveEq] (!halted) -> 1.0:(locationE'=locationE+1);
	[moveMinus] (!halted) -> 1.0:(locationE'=locationE+1);

	[halt] (!halted) -> 1.0:(halted'=halted);
	[signal] (halted) -> 1.0:(halted'=halted);
endmodule

label "targetRegion0" = (locationA_0_0 = 4) | (locationA_0_0 = 5) | (locationA_0_0 = 6);
label "stopped" = (!halted_E);
