asynchronous = {sense}
agentEnvironment = {halt, signal}
globalSynchronous = {move}

agent module WithSensor
    locationA : [1..22] init 1;
    sensed : [0..22] init 1;
    hasSensed : bool init true;
    stoppedA : bool init false;

	[move] (hasSensed & sensed<20) -> 1.0:(locationA'=locationA+1) & (hasSensed'=false) & (sensed'=0);
	[sense] (!hasSensed) -> 0.2:(sensed'=locationA) & (hasSensed'=true)
	    + 0.2:(sensed'=locationA+1) & (hasSensed'=true)
	    + 0.2:(sensed'=locationA+2) & (hasSensed'=true)
	    + 0.2:(sensed'=locationA-2) & (hasSensed'=true)
	    + 0.2:(sensed'=locationA-1) & (hasSensed'=true);

	[halt] (sensed>=20 & !stoppedA) -> 1.0:(stoppedA'=true);
endmodule

agent module WithoutSensor
    locationB : [1..7] init 1;
    stoppedB : bool init false;

	[move] (!stoppedB) -> 1.0:(locationB'=locationB+1);
	[signal] (true) -> 1.0:(stoppedB'=true);
endmodule

environment module Env
    locationE : [1..22] init 1;
    halted : bool init false;

	[move] (!halted) -> 1.0:(locationE'=locationE+1);
	[halt] (!halted) -> 1.0:(halted'=true);
	[signal] (halted) -> 1.0:(halted'=halted);
endmodule

label "targetRegion" = (locationB_1_0 = 19) | (locationB_1_0 = 20) | (locationB_1_0 = 21);
label "stopped" = (stoppedB_1_0);
